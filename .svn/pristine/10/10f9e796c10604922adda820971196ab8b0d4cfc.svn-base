#!/bin/sh
source `dirname $0`/skybox_ha.conf
skyboxlog=/home/skyboxview/ha/log/skybox_ha.log
skyuserhome=/home/skyboxview/ha
state=0

# removing incrontab files and tabs
if [ -f "/home/skyboxview/ha/incron.primary" ]
then
    echo "Removing incron.primary..."
    rm -f $skyuserhome/incron.primary 
    if [ $? == 0 ]
    then
        date +"%Y-%m-%d %T Incron.primary file was removed successfully" >> $skyboxlog
        echo $(date) " Incron.primary file was removed successfully"
    else
        date +"%Y-%m-%d %T Incron.primary file failed to be removed" >> $skyboxlog
        echo $(date) " Icron.primary file failed to be removed"
    fi
elif [ -f "/home/skyboxview/ha/incron.secondary" ]
then
    echo "Removing incron.secondary file..."
    rm -f $skyuserhome/incron.secondary
    if [ $? == 0 ]
    then
        date +"%Y-%m-%d %T Incron.secondary file was removed successfully" >> $skyboxlog
        echo $(date) " Incrontab.secondary file was removed successfully"
    else
        date +"%Y-%m-%d %T Incron.secondary file failed to be removed" >> $skyboxlog
        echo $(date) " Incron.secondary file failed to be removed"
    fi
else
    date +"%Y-%m-%d %T No incron files were found!" >> $skyboxlog
fi

#removing incrontab
incrontab -r

# adding cron entries for secondary
echo $SKYBOX_HOME/data/xml_models IN_MOVED_TO /home/skyboxview/ha/load.sh \$@/\$\# >> $skyuserhome/incron.secondary
echo $SKYBOX_HOME/data/sqlx_models IN_MOVED_TO /home/skyboxview/ha/load.sh \$@/\$\# >> $skyuserhome/incron.secondary
incrontab $skyuserhome/incron.secondary
incrontab -d
#sudo /sbin/iptables-restore < /home/skyboxview/ha/iptables-secondary
#sudo service iptables restart
if [ "$1" == "auto" ]; then
        echo "Resetting skybox crontab and adding watchdog script"
	crontab -l > /home/skyboxview/ha/cron
	sed -i '/skybox_watchdog.sh/d' /home/skyboxview/ha/cron
        
	if ! (grep -Fxq '*/10 * * * * /home/skyboxview/ha/skybox_watchdog.sh >/dev/null 2>&1' /home/skyboxview/ha/cron)
        then
            echo "*/10 * * * * /home/skyboxview/ha/skybox_watchdog.sh >/dev/null 2>&1" >> /home/skyboxview/ha/cron
        else
            date +"%Y-%m-%d %T Watchdog Cron entry already exist" >> $skyboxlog
        fi
        if !(grep -Fxq '*/60 * * * * /home/skyboxview/ha/conf_files_sync.sh >/dev/null 2>&1' /home/skyboxview/ha/cron)
        then
            echo "*/60 * * * * /home/skyboxview/ha/conf_files_sync.sh >/dev/null 2>&1" >> /home/skyboxview/ha/cron
        else
            date +"%Y-%m-%d %T Conf_files_sync Cron entry already exist" >> $skyboxlog
        fi
        crontab $skyuserhome/cron
	date +"%Y-%m-%d %T Setsecondary run with auto" >> $skyboxlog
else
        echo "Removing skybox_watchdog.sh from crontab, auto failover is not configured"
	crontab -l > $skyuserhome/cron
	sed -i '/skybox_watchdog.sh/d' $skyuserhome/cron
	crontab $skyuserhome/cron
        echo "To enable auto failover, rerun this script as follows"
        echo "$0 auto"
	date +"%Y/%m/%d %T Setsecondary run without auto" >> $skyboxlog
	state=1
fi

# Set firewalls back to original installation state


if (( $(ps -ef | grep -v grep | grep firewalld | wc -l) > 0 )) 
then
    echo "Detected Firewalld, loading configuration..."
    sudo cp $skyuserhome/firewall/original_public.xml /etc/firewalld/zones/public.xml
    sudo firewall-cmd --reload
    if [ $? == 0 ]
    then
        date +"%Y-%m-%d %T Firewalld configuration was uploaded,firewall was successfully reloaded" >> $skyboxlog
        echo "Firewalld configuration was uploaded and firewall was successfully reloaded..." 
    else
        date +"%Y-%m-%d %T Firewalld configuration was uploaded, but firewall was not reloaded" >> $skyboxlog
        echo "Firewalld configuration was uploaded, but firewall was not reloaded..."
        state=1
    fi
else
    echo "Detected IPTables, loading configuration..."
    sudo /sbin/iptables-restore < $skyuserhome/firewall/iptables-secondary
    if [ $? == 0 ]
    then
        date +"%Y-%m-%d %T Iptables configuration was uploaded..." >> $skyboxlog
        echo "Iptables configuration was uploaded..."
    else
        date +"%Y-%m-%d %T Iptables configuration failed to load..." >> $skyboxlog
        echo "Iptables configuration failed to load..."
        state=1
    fi
fi

# disabling task scheduler in sb_server.properties
cd $SKYBOX_HOME/server/bin/
./settaskschedulingactivation.sh disable >/dev/null

if [ $? == 0 ]
    then 
        echo "Task Scheduling has been disabled"
        date +"%Y-%m-%d %T, Task Scheduling has been disabled" |
        tee -a $SKYBOX_HOME/server/log/debug/debug.log $skyboxlog 
        state=0
    else
        echo "ERROR: Task Scheduling has not been set to false. Please rerun the setsecondary script again."
        date +"%Y-%m-%d %T, ERROR: Task Scheduling has not been set to false. Please rerun the setsecondary script again." |
        tee -a  $SKYBOX_HOME/server/log/debug/debug.log $skyboxlog
        state=1
fi

# disabling _collectors_auto_update flag in sb_server.properties
cd $SKYBOX_HOME/server/bin/
if grep -rni "enable_collectors_auto_update=true" $SKYBOX_HOME/server/conf/sb_server.properties
    then
        date +"%Y-%m-%d %T, enable_collectors_auto_update flag is set to true, changing flag to false" |
        tee -a $SKYBOX_HOME/server/log/debug/debug.log $skyboxlog
        sed -i 's/enable_collectors_auto_update=true/enable_collectors_auto_update=false/g' $SKYBOX_HOME/server/conf/sb_server.properties
        if [ $? == 0 ]
            then
                date +"%Y-%m-%d %T, enable_collectors_auto_update flag has been successfully set to false..." |
                tee -a $SKYBOX_HOME/server/log/debug/debug.log $skyboxlog
                state=0
            else
                date +"%Y-%m-%d %T, enable_collectors_auto_update flag has not been set to false, please rerun script" |
                tee -a $SKYBOX_HOME/server/log/debug/debug.log $skyboxlog
                state=1
        fi
    else
        date +"%Y-%m-%d %T, enable_collectors_auto_update flag is set to false, no change needed..." |
        tee -a $SKYBOX_HOME/server/log/debug/debug.log $skyboxlog
fi

#
# checks state variable to see if all of the scripts were ran correctly
#
if [ $state == 0 ]
then
   date +"%Y-%m-%d %T Host has been successfully set as secondary" >> $skyboxlog
   echo "Host has been successfully set as secondary"
else
   date +"%Y-%m-%d %T Host failed to be set as secondary" >> $skyboxlog
   echo "Host has failed to be set as secondary"
fi


